<!DOCTYPE html>
<html lang="zh-CN">
<head>
  <meta charset="UTF-8">
<meta name="viewport" content="width=device-width">
<meta name="theme-color" content="#222" media="(prefers-color-scheme: light)">
<meta name="theme-color" content="#222" media="(prefers-color-scheme: dark)"><meta name="generator" content="Hexo 6.3.0">

  <link rel="apple-touch-icon" sizes="180x180" href="/images/apple-touch-icon-next.png">
  <link rel="icon" type="image/png" sizes="32x32" href="https://img.econow.cn/2018/1545104669394.png">
  <link rel="icon" type="image/png" sizes="16x16" href="https://img.econow.cn/2018/1545104669394.png">
  <link rel="mask-icon" href="/images/logo.svg" color="#222">

<link rel="stylesheet" href="/css/main.css">



<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css" integrity="sha256-CTSx/A06dm1B063156EVh15m6Y67pAjZZaQc89LLSrU=" crossorigin="anonymous">

<script class="next-config" data-name="main" type="application/json">{"hostname":"econow.cn","root":"/","images":"/images","scheme":"Gemini","darkmode":true,"version":"8.18.2","exturl":false,"sidebar":{"position":"left","display":"post","padding":18,"offset":12},"copycode":{"enable":true,"style":null},"fold":{"enable":false,"height":500},"bookmark":{"enable":false,"color":"#222","save":"auto"},"mediumzoom":false,"lazyload":true,"pangu":true,"comments":{"style":"tabs","active":null,"storage":true,"lazyload":false,"nav":null},"stickytabs":false,"motion":{"enable":false,"async":true,"transition":{"menu_item":"fadeInDown","post_block":"fadeIn","post_header":"fadeInDown","post_body":"fadeInDown","coll_header":"fadeInLeft","sidebar":"fadeInUp"}},"prism":false,"i18n":{"placeholder":"搜索...","empty":"没有找到任何搜索结果：${query}","hits_time":"找到 ${hits} 个搜索结果（用时 ${time} 毫秒）","hits":"找到 ${hits} 个搜索结果"}}</script><script src="/js/config.js"></script>

    <meta name="description" content="此篇是之前写的另外一个爬虫项目，只不过后来又了若干版本的演变，因此记录下来。 技术点">
<meta property="og:type" content="article">
<meta property="og:title" content="批量抓取新发地菜价">
<meta property="og:url" content="https://econow.cn/%E6%89%B9%E9%87%8F%E6%8A%93%E5%8F%96%E6%96%B0%E5%8F%91%E5%9C%B0%E8%8F%9C%E4%BB%B7">
<meta property="og:site_name" content="Medivh&#39;s castle">
<meta property="og:description" content="此篇是之前写的另外一个爬虫项目，只不过后来又了若干版本的演变，因此记录下来。 技术点">
<meta property="og:locale" content="zh_CN">
<meta property="article:published_time" content="2022-09-30T03:00:03.000Z">
<meta property="article:modified_time" content="2023-10-31T02:15:08.716Z">
<meta property="article:author" content="medivh">
<meta property="article:tag" content="爬虫">
<meta property="article:tag" content="python">
<meta name="twitter:card" content="summary">


<link rel="canonical" href="https://econow.cn/%E6%89%B9%E9%87%8F%E6%8A%93%E5%8F%96%E6%96%B0%E5%8F%91%E5%9C%B0%E8%8F%9C%E4%BB%B7">



<script class="next-config" data-name="page" type="application/json">{"sidebar":"","isHome":false,"isPost":true,"lang":"zh-CN","comments":true,"permalink":"https://econow.cn/%E6%89%B9%E9%87%8F%E6%8A%93%E5%8F%96%E6%96%B0%E5%8F%91%E5%9C%B0%E8%8F%9C%E4%BB%B7","path":"/批量抓取新发地菜价","title":"批量抓取新发地菜价"}</script>

<script class="next-config" data-name="calendar" type="application/json">""</script>
<title>批量抓取新发地菜价 | Medivh's castle</title>
  

  <script src="/js/third-party/analytics/baidu-analytics.js"></script>
  <script async src="https://hm.baidu.com/hm.js?21ded952ca9fc25e2b0630494a17ec7f"></script>







  <noscript>
    <link rel="stylesheet" href="/css/noscript.css">
  </noscript>
</head>

<body itemscope itemtype="http://schema.org/WebPage">
  <div class="headband"></div>

  <main class="main">
    <div class="column">
      <header class="header" itemscope itemtype="http://schema.org/WPHeader"><div class="site-brand-container">
  <div class="site-nav-toggle">
    <div class="toggle" aria-label="切换导航栏" role="button">
        <span class="toggle-line"></span>
        <span class="toggle-line"></span>
        <span class="toggle-line"></span>
    </div>
  </div>

  <div class="site-meta">

    <a href="/" class="brand" rel="start">
      <i class="logo-line"></i>
      <p class="site-title">Medivh's castle</p>
      <i class="logo-line"></i>
    </a>
      <p class="site-subtitle" itemprop="description">数据蜘蛛工作室</p>
  </div>

  <div class="site-nav-right">
    <div class="toggle popup-trigger" aria-label="搜索" role="button">
    </div>
  </div>
</div>



<nav class="site-nav">
  <ul class="main-menu menu"><li class="menu-item menu-item-home"><a href="/" rel="section"><i class="fa fa-home fa-fw"></i>首页</a></li><li class="menu-item menu-item-about"><a href="/about/" rel="section"><i class="fa fa-user fa-fw"></i>关于</a></li><li class="menu-item menu-item-tags"><a href="/tags/" rel="section"><i class="fa fa-tags fa-fw"></i>标签</a></li><li class="menu-item menu-item-categories"><a href="/categories/" rel="section"><i class="fa fa-th fa-fw"></i>分类</a></li><li class="menu-item menu-item-archives"><a href="/archives/" rel="section"><i class="fa fa-archive fa-fw"></i>归档</a></li><li class="menu-item menu-item-search"><a href="/search" rel="section"><i class="fa fa-search fa-fw"></i>搜索</a></li>
  </ul>
</nav>




</header>
        
  
  <aside class="sidebar">

    <div class="sidebar-inner sidebar-nav-active sidebar-toc-active">
      <ul class="sidebar-nav">
        <li class="sidebar-nav-toc">
          文章目录
        </li>
        <li class="sidebar-nav-overview">
          站点概览
        </li>
      </ul>

      <div class="sidebar-panel-container">
        <!--noindex-->
        <div class="post-toc-wrap sidebar-panel">
            <div class="post-toc animated"><ol class="nav"><li class="nav-item nav-level-2"><a class="nav-link" href="#%E6%8A%80%E6%9C%AF%E7%82%B9"><span class="nav-number">1.</span> <span class="nav-text">技术点</span></a></li><li class="nav-item nav-level-2"><a class="nav-link" href="#%E9%80%BB%E8%BE%91"><span class="nav-number">2.</span> <span class="nav-text">逻辑</span></a></li><li class="nav-item nav-level-2"><a class="nav-link" href="#%E5%A4%9A%E7%BA%BF%E7%A8%8B%E7%9A%84%E6%96%B9%E5%BC%8F"><span class="nav-number">3.</span> <span class="nav-text">多线程的方式</span></a></li></ol></div>
        </div>
        <!--/noindex-->

        <div class="site-overview-wrap sidebar-panel">
          <div class="site-author animated" itemprop="author" itemscope itemtype="http://schema.org/Person">
  <p class="site-author-name" itemprop="name">medivh</p>
  <div class="site-description" itemprop="description"></div>
</div>
<div class="site-state-wrap animated">
  <nav class="site-state">
      <div class="site-state-item site-state-posts">
        <a href="/archives/">
          <span class="site-state-item-count">95</span>
          <span class="site-state-item-name">日志</span>
        </a>
      </div>
      <div class="site-state-item site-state-categories">
          <a href="/categories/">
        <span class="site-state-item-count">12</span>
        <span class="site-state-item-name">分类</span></a>
      </div>
      <div class="site-state-item site-state-tags">
          <a href="/tags/">
        <span class="site-state-item-count">48</span>
        <span class="site-state-item-name">标签</span></a>
      </div>
  </nav>
</div>

        </div>
      </div>
    </div>

    
  </aside>


    </div>

    <div class="main-inner post posts-expand">


  


<div class="post-block">
  
  

  <article itemscope itemtype="http://schema.org/Article" class="post-content" lang="zh-CN">
    <link itemprop="mainEntityOfPage" href="https://econow.cn/%E6%89%B9%E9%87%8F%E6%8A%93%E5%8F%96%E6%96%B0%E5%8F%91%E5%9C%B0%E8%8F%9C%E4%BB%B7">

    <span hidden itemprop="author" itemscope itemtype="http://schema.org/Person">
      <meta itemprop="image" content="/images/avatar.gif">
      <meta itemprop="name" content="medivh">
    </span>

    <span hidden itemprop="publisher" itemscope itemtype="http://schema.org/Organization">
      <meta itemprop="name" content="Medivh's castle">
      <meta itemprop="description" content="">
    </span>

    <span hidden itemprop="post" itemscope itemtype="http://schema.org/CreativeWork">
      <meta itemprop="name" content="批量抓取新发地菜价 | Medivh's castle">
      <meta itemprop="description" content="">
    </span>
      <header class="post-header">
        <h1 class="post-title" itemprop="name headline">
          批量抓取新发地菜价
        </h1>

        <div class="post-meta-container">
          <div class="post-meta">
    <span class="post-meta-item">
      <span class="post-meta-item-icon">
        <i class="far fa-calendar"></i>
      </span>
      <span class="post-meta-item-text">发表于</span>

      <time title="创建时间：2022-09-30 11:00:03" itemprop="dateCreated datePublished" datetime="2022-09-30T11:00:03+08:00">2022-09-30</time>
    </span>
    <span class="post-meta-item">
      <span class="post-meta-item-icon">
        <i class="far fa-calendar-check"></i>
      </span>
      <span class="post-meta-item-text">更新于</span>
      <time title="修改时间：2023-10-31 10:15:08" itemprop="dateModified" datetime="2023-10-31T10:15:08+08:00">2023-10-31</time>
    </span>
    <span class="post-meta-item">
      <span class="post-meta-item-icon">
        <i class="far fa-folder"></i>
      </span>
      <span class="post-meta-item-text">分类于</span>
        <span itemprop="about" itemscope itemtype="http://schema.org/Thing">
          <a href="/categories/%E4%B9%90%E8%B6%A3/" itemprop="url" rel="index"><span itemprop="name">乐趣</span></a>
        </span>
    </span>

  
    <span id="/%E6%89%B9%E9%87%8F%E6%8A%93%E5%8F%96%E6%96%B0%E5%8F%91%E5%9C%B0%E8%8F%9C%E4%BB%B7" class="post-meta-item leancloud_visitors" data-flag-title="批量抓取新发地菜价" title="阅读次数">
      <span class="post-meta-item-icon">
        <i class="far fa-eye"></i>
      </span>
      <span class="post-meta-item-text">阅读次数：</span>
      <span class="leancloud-visitors-count"></span>
    </span>
</div>

        </div>
      </header>

    
    
    
    <div class="post-body" itemprop="articleBody"><p>此篇是之前写的另外一个爬虫项目，只不过后来又了若干版本的演变，因此记录下来。</p>
<h2 id="技术点"><a href="#技术点" class="headerlink" title="技术点"></a>技术点</h2><ul>
<li>多线程</li>
<li>asyncio</li>
<li>aiohttp</li>
<li>aiofiles</li>
</ul>
<h2 id="逻辑"><a href="#逻辑" class="headerlink" title="逻辑"></a>逻辑</h2><p>该项目抓取的逻辑比较简单，直接根据api获取数据后存储即可，无需从源代码上筛选节点。</p>
<h2 id="多线程的方式"><a href="#多线程的方式" class="headerlink" title="多线程的方式"></a>多线程的方式</h2><blockquote>
<p>需要注意线程数量和limit值，否则容易把网站搞崩！</p>
</blockquote>
<p>下列代码实现两种功能，全量和增量，适用flag来标识：</p>
<ul>
<li>全量数据，抓取全部，如果出现失败的会最终进行重试，直到指定list为空；</li>
<li>增量数据，默认抓取今天，但是如果没有今天的则抓取前一天的，并和已有文件进行比对，不存在对应日期则存储。</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="comment"># -*- coding: UTF-8 -*-</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">@time:2022/09/26</span></span><br><span class="line"><span class="string">@file:xinfadi.py</span></span><br><span class="line"><span class="string">@author:medivh</span></span><br><span class="line"><span class="string">@IDE:PyCharm </span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> concurrent.futures <span class="keyword">import</span> ThreadPoolExecutor</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">from</span> utils <span class="keyword">import</span> random_useragent</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_page_total</span>():</span><br><span class="line">    url = <span class="string">&quot;http://xinfadi.com.cn/getPriceData.html&quot;</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        response = requests.post(</span><br><span class="line">            url,</span><br><span class="line">            headers=&#123;</span><br><span class="line">                <span class="string">&quot;User-Agent&quot;</span>: random_useragent(),</span><br><span class="line">                <span class="string">&quot;Content-Type&quot;</span>: <span class="string">&quot;application/x-www-form-urlencoded; charset=UTF-8&quot;</span>,</span><br><span class="line">            &#125;,</span><br><span class="line">        )</span><br><span class="line">        content = response.json()</span><br><span class="line">        <span class="keyword">return</span> content[<span class="string">&#x27;count&#x27;</span>]</span><br><span class="line">    <span class="keyword">except</span> requests.exceptions.RequestException:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">save_data</span>(<span class="params">cols</span>):</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;xfd.csv&#x27;</span>, <span class="string">&#x27;a+&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">            f.write(<span class="string">&quot;&quot;</span>.join(cols))</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        <span class="built_in">print</span>(e)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_data</span>(<span class="params">pages, current_num, limit_num, flag</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    :param current_num: 当前页</span></span><br><span class="line"><span class="string">    :param limit_num: 限制返回数量</span></span><br><span class="line"><span class="string">    :param flag: True 全量，False 增量</span></span><br><span class="line"><span class="string">    :return:</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">if</span> flag:</span><br><span class="line">        data = download_one_page(current_num, limit_num)</span><br><span class="line">        <span class="keyword">if</span> data <span class="keyword">and</span> save_data(data):</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;完成第&#123;&#125;页&#x27;</span>.<span class="built_in">format</span>(current_num))</span><br><span class="line">            pages.remove(current_num)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;执行增量逻辑&#x27;</span>)</span><br><span class="line">        data = download_one_page(<span class="number">1</span>, <span class="number">300</span>)</span><br><span class="line">        <span class="comment"># 获得当前时间</span></span><br><span class="line">        now = datetime.datetime.now()</span><br><span class="line">        <span class="comment"># 转换为指定的格式:</span></span><br><span class="line">        days = now.strftime(<span class="string">&quot;%Y-%m-%d&quot;</span>)</span><br><span class="line">        new_data = [col <span class="keyword">for</span> col <span class="keyword">in</span> data <span class="keyword">if</span> days <span class="keyword">in</span> col]</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> new_data:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;没有今天的数据，重新拉取昨天的数据&#x27;</span>)</span><br><span class="line">            one_day_ago = (datetime.datetime.now() - datetime.timedelta(days=<span class="number">1</span>))</span><br><span class="line">            days = one_day_ago.strftime(<span class="string">&quot;%Y-%m-%d&quot;</span>)</span><br><span class="line">            new_data = [col <span class="keyword">for</span> col <span class="keyword">in</span> data <span class="keyword">if</span> days <span class="keyword">in</span> col]</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(<span class="string">&#x27;xfd.csv&#x27;</span>) <span class="keyword">or</span> <span class="keyword">not</span> os.path.getsize(<span class="string">&#x27;xfd.csv&#x27;</span>):</span><br><span class="line">                <span class="comment"># 如果文件不存在或者文件为空，则全部存储</span></span><br><span class="line">                save_data(new_data)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;xfd.csv&#x27;</span>, <span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">                    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">                    1. 如果查询到的第一行不为空不包含指定日期，则存储</span></span><br><span class="line"><span class="string">                    2. 如果查询到的第一行为空，则存储</span></span><br><span class="line"><span class="string">                    &quot;&quot;&quot;</span></span><br><span class="line">                    <span class="keyword">if</span> days <span class="keyword">not</span> <span class="keyword">in</span> f.readline():</span><br><span class="line">                        save_data(new_data)</span><br><span class="line">                    <span class="keyword">elif</span> days <span class="keyword">not</span> <span class="keyword">in</span> f.readline():</span><br><span class="line">                        save_data(new_data)</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            <span class="built_in">print</span>(e)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">download_one_page</span>(<span class="params">current_num, limit_num</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    :param current_num: 当前页</span></span><br><span class="line"><span class="string">    :param limit_num: 总数</span></span><br><span class="line"><span class="string">    :return:</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    url = <span class="string">&quot;http://xinfadi.com.cn/getPriceData.html&quot;</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        response = requests.post(</span><br><span class="line">            url,</span><br><span class="line">            headers=&#123;</span><br><span class="line">                <span class="string">&quot;User-Agent&quot;</span>: random_useragent(),</span><br><span class="line">                <span class="string">&quot;Content-Type&quot;</span>: <span class="string">&quot;application/x-www-form-urlencoded; charset=UTF-8&quot;</span>,</span><br><span class="line">            &#125;,</span><br><span class="line">            data=&#123;</span><br><span class="line">                <span class="string">&quot;current&quot;</span>: current_num,</span><br><span class="line">                <span class="string">&quot;limit&quot;</span>: limit_num</span><br><span class="line">            &#125;,</span><br><span class="line">            timeout=<span class="number">10</span></span><br><span class="line">        )</span><br><span class="line">        content = response.json()</span><br><span class="line">        cols = <span class="built_in">list</span>()</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> content[<span class="string">&#x27;list&#x27;</span>]:</span><br><span class="line">            col = <span class="string">&#x27;&#123;&#125;,&#123;&#125;,&#123;&#125;,&#123;&#125;,&#123;&#125;,&#123;&#125;,&#123;&#125;,&#123;&#125;,&#123;&#125;,&#123;&#125; \n&#x27;</span>.<span class="built_in">format</span>(i[<span class="string">&#x27;id&#x27;</span>], i[<span class="string">&#x27;prodName&#x27;</span>], i[<span class="string">&#x27;prodCatid&#x27;</span>], i[<span class="string">&#x27;prodCat&#x27;</span>],</span><br><span class="line">                                                            i[<span class="string">&#x27;lowPrice&#x27;</span>],</span><br><span class="line">                                                            i[<span class="string">&#x27;highPrice&#x27;</span>], i[<span class="string">&#x27;avgPrice&#x27;</span>], i[<span class="string">&#x27;place&#x27;</span>],</span><br><span class="line">                                                            i[<span class="string">&#x27;unitInfo&#x27;</span>],</span><br><span class="line">                                                            i[<span class="string">&#x27;pubDate&#x27;</span>])</span><br><span class="line">            cols.append(col)</span><br><span class="line">        response.close()</span><br><span class="line">        <span class="keyword">return</span> cols</span><br><span class="line">    <span class="keyword">except</span> requests.exceptions.RequestException:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">replace_price</span>(<span class="params">nums, limit_num</span>):</span><br><span class="line">    <span class="comment"># time.sleep(30) # 重试数据，可等待30秒，也可以不等</span></span><br><span class="line">    r_sleep = [<span class="number">0</span>, <span class="number">0.1</span>, <span class="number">0.2</span>, <span class="number">0.3</span>]</span><br><span class="line">    <span class="keyword">while</span> nums:</span><br><span class="line">        <span class="keyword">with</span> ThreadPoolExecutor(<span class="number">10</span>) <span class="keyword">as</span> rp_t:</span><br><span class="line">            <span class="keyword">for</span> page_num <span class="keyword">in</span> nums:</span><br><span class="line">                rp_args = [page_num, limit_num]</span><br><span class="line">                rp_t.submit(<span class="keyword">lambda</span> p: download_one_page(*p), rp_args)</span><br><span class="line">                time.sleep(random.choice(r_sleep))</span><br><span class="line">    rp_end = <span class="built_in">int</span>(time.time())</span><br><span class="line">    <span class="built_in">print</span>(rp_end)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;最终耗时：&#123;&#125;&#x27;</span>.<span class="built_in">format</span>(rp_end - start))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">all_data</span>():</span><br><span class="line">    limit_num = <span class="number">1000</span></span><br><span class="line">    page_nums = <span class="built_in">int</span>(count / <span class="number">1500</span>) + <span class="number">1</span> + <span class="number">1</span>  <span class="comment"># 此处为页面总数，+1为无法整除的情况，第二个+1为range范围终止位置需要再+1</span></span><br><span class="line">    pages = <span class="built_in">list</span>()</span><br><span class="line">    <span class="keyword">with</span> ThreadPoolExecutor(<span class="number">10</span>) <span class="keyword">as</span> t:</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, page_nums):</span><br><span class="line">            args = [pages, i, limit_num, <span class="literal">True</span>]</span><br><span class="line">            pages.append(i)</span><br><span class="line">            t.submit(<span class="keyword">lambda</span> p: get_data(*p), args)</span><br><span class="line">    end = <span class="built_in">int</span>(time.time())</span><br><span class="line">    <span class="built_in">print</span>(end)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;初次抓取耗时：&#123;&#125;&#x27;</span>.<span class="built_in">format</span>(end - start))</span><br><span class="line">    <span class="keyword">if</span> pages:</span><br><span class="line">        replace_price(pages, limit_num)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">last_day_data</span>():</span><br><span class="line">    <span class="comment"># TODO 增量数据放在文首</span></span><br><span class="line">    limit_num = <span class="number">1000</span></span><br><span class="line">    page_nums = <span class="number">1</span> + <span class="number">1</span></span><br><span class="line">    pages = <span class="built_in">list</span>()</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;初始化page &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(pages))</span><br><span class="line">    <span class="keyword">with</span> ThreadPoolExecutor(<span class="number">10</span>) <span class="keyword">as</span> t:</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, page_nums):</span><br><span class="line">            args = [pages, i, limit_num, <span class="literal">False</span>]</span><br><span class="line">            pages.append(i)</span><br><span class="line">            t.submit(<span class="keyword">lambda</span> p: get_data(*p), args)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    start = <span class="built_in">int</span>(time.time())</span><br><span class="line">    <span class="built_in">print</span>(start)</span><br><span class="line">    count = get_page_total()</span><br><span class="line">    <span class="keyword">if</span> count:</span><br><span class="line">        <span class="comment"># all_data() # 全量数据</span></span><br><span class="line">        last_day_data() <span class="comment"># 增量数据</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;无法获取总数&#x27;</span>)</span><br></pre></td></tr></table></figure>

<p>最终使用了10个线程正常跑完。</p>

    </div>

    
    
    

    <footer class="post-footer">
          <div class="reward-container">
  <div>请我一杯咖啡吧！</div>
  <button>
    赞赏
  </button>
  <div class="post-reward">
      <div>
        <img src="/images/wechatpay.jpg" alt="medivh 微信">
        <span>微信</span>
      </div>
      <div>
        <img src="/images/alipay.jpg" alt="medivh 支付宝">
        <span>支付宝</span>
      </div>

  </div>
</div>

          

<div class="post-copyright">
<ul>
  <li class="post-copyright-author">
      <strong>本文作者： </strong>medivh
  </li>
  <li class="post-copyright-link">
      <strong>本文链接：</strong>
      <a href="https://econow.cn/%E6%89%B9%E9%87%8F%E6%8A%93%E5%8F%96%E6%96%B0%E5%8F%91%E5%9C%B0%E8%8F%9C%E4%BB%B7" title="批量抓取新发地菜价">https://econow.cn/批量抓取新发地菜价</a>
  </li>
  <li class="post-copyright-license">
      <strong>版权声明： </strong>本博客所有文章除特别声明外，均采用 <a href="https://creativecommons.org/licenses/by-nc-sa/4.0/" rel="noopener" target="_blank"><i class="fab fa-fw fa-creative-commons"></i>BY-NC-SA</a> 许可协议。转载请注明出处！
  </li>
</ul>
</div>

          <div class="post-tags">
              <a href="/tags/%E7%88%AC%E8%99%AB/" rel="tag"><i class="fa fa-tag"></i> 爬虫</a>
              <a href="/tags/python/" rel="tag"><i class="fa fa-tag"></i> python</a>
          </div>

        

          <div class="post-nav">
            <div class="post-nav-item">
                <a href="/%E6%89%B9%E9%87%8F%E6%8A%93%E5%8F%96%E5%85%8D%E8%B4%B9%E5%B0%8F%E8%AF%B4" rel="prev" title="批量抓取免费小说">
                  <i class="fa fa-angle-left"></i> 批量抓取免费小说
                </a>
            </div>
            <div class="post-nav-item">
                <a href="/%E5%9F%BA%E4%BA%8EPVE%E5%B9%B3%E5%8F%B0%E7%9A%84TrueNAS_Scale+NextCloud%E7%9A%84%E5%AE%9E%E8%B7%B5%E6%80%BB%E7%BB%93%EF%BC%88%E4%B8%80%EF%BC%89" rel="next" title="基于PVE平台的TrueNAS_Scale+NextCloud的实践总结（一）">
                  基于PVE平台的TrueNAS_Scale+NextCloud的实践总结（一） <i class="fa fa-angle-right"></i>
                </a>
            </div>
          </div>
    </footer>
  </article>
</div>






</div>
  </main>

  <footer class="footer">
    <div class="footer-inner">

  <div class="beian"><a href="https://beian.miit.gov.cn/" rel="noopener" target="_blank">京ICP备17063827号-2 </a>
  </div>
  <div class="copyright">
    &copy; 2017 – 
    <span itemprop="copyrightYear">2023</span>
    <span class="with-love">
      <i class="fa fa-heart"></i>
    </span>
    <span class="author" itemprop="copyrightHolder">medivh</span>
  </div>

    </div>
  </footer>

  
  <div class="back-to-top" role="button" aria-label="返回顶部">
    <i class="fa fa-arrow-up fa-lg"></i>
    <span>0%</span>
  </div>
  <div class="reading-progress-bar"></div>

<noscript>
  <div class="noscript-warning">Theme NexT works best with JavaScript enabled</div>
</noscript>


  
  <script src="https://cdnjs.cloudflare.com/ajax/libs/animejs/3.2.1/anime.min.js" integrity="sha256-XL2inqUJaslATFnHdJOi9GfQ60on8Wx1C2H8DYiN1xY=" crossorigin="anonymous"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/lozad.js/1.16.0/lozad.min.js" integrity="sha256-mOFREFhqmHeQbXpK2lp4nA3qooVgACfh88fpJftLBbc=" crossorigin="anonymous"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/pangu/4.0.7/pangu.min.js" integrity="sha256-j+yj56cdEY2CwkVtGyz18fNybFGpMGJ8JxG3GSyO2+I=" crossorigin="anonymous"></script>
<script src="/js/comments.js"></script><script src="/js/utils.js"></script><script src="/js/next-boot.js"></script>

  






  


  <script class="next-config" data-name="leancloud_visitors" type="application/json">{"enable":true,"app_id":"g1GwilqmVAUne2tDEDncEChG-gzGzoHsz","app_key":"YB2e5dSKMmMYYCtaSzxp9fdS","server_url":null,"security":true}</script>
  <script src="/js/third-party/statistics/lean-analytics.js"></script>



</body>
</html>
