<!DOCTYPE html>
<html lang="zh-CN">
<head>
  <meta charset="UTF-8">
<meta name="viewport" content="width=device-width">
<meta name="theme-color" content="#222" media="(prefers-color-scheme: light)">
<meta name="theme-color" content="#222" media="(prefers-color-scheme: dark)"><meta name="generator" content="Hexo 6.3.0">

  <link rel="apple-touch-icon" sizes="180x180" href="/images/apple-touch-icon-next.png">
  <link rel="icon" type="image/png" sizes="32x32" href="https://img.econow.cn/2018/1545104669394.png">
  <link rel="icon" type="image/png" sizes="16x16" href="https://img.econow.cn/2018/1545104669394.png">
  <link rel="mask-icon" href="/images/logo.svg" color="#222">

<link rel="stylesheet" href="/css/main.css">



<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css" integrity="sha256-CTSx/A06dm1B063156EVh15m6Y67pAjZZaQc89LLSrU=" crossorigin="anonymous">

<script class="next-config" data-name="main" type="application/json">{"hostname":"econow.cn","root":"/","images":"/images","scheme":"Gemini","darkmode":true,"version":"8.18.2","exturl":false,"sidebar":{"position":"left","display":"post","padding":18,"offset":12},"copycode":{"enable":true,"style":null},"fold":{"enable":false,"height":500},"bookmark":{"enable":false,"color":"#222","save":"auto"},"mediumzoom":false,"lazyload":true,"pangu":true,"comments":{"style":"tabs","active":null,"storage":true,"lazyload":false,"nav":null},"stickytabs":false,"motion":{"enable":false,"async":true,"transition":{"menu_item":"fadeInDown","post_block":"fadeIn","post_header":"fadeInDown","post_body":"fadeInDown","coll_header":"fadeInLeft","sidebar":"fadeInUp"}},"prism":false,"i18n":{"placeholder":"搜索...","empty":"没有找到任何搜索结果：${query}","hits_time":"找到 ${hits} 个搜索结果（用时 ${time} 毫秒）","hits":"找到 ${hits} 个搜索结果"},"path":"/search.xml","localsearch":{"enable":true,"trigger":"auto","top_n_per_article":1,"unescape":false,"preload":false}}</script><script src="/js/config.js"></script>

    <meta name="description" content="前言最近在折腾NAS和虚拟机的时候发现一个问题，部署的应用和服务太多了，有点记不住地址和端口了，所以需要一个导航页来展示这一切。">
<meta property="og:type" content="article">
<meta property="og:title" content="Kubernetes关于StorageClass的应用——Flare">
<meta property="og:url" content="https://econow.cn/Kubernetes%E5%85%B3%E4%BA%8EStorageClass%E7%9A%84%E5%BA%94%E7%94%A8%E2%80%94%E2%80%94Flare">
<meta property="og:site_name" content="Medivh&#39;s castle">
<meta property="og:description" content="前言最近在折腾NAS和虚拟机的时候发现一个问题，部署的应用和服务太多了，有点记不住地址和端口了，所以需要一个导航页来展示这一切。">
<meta property="og:locale" content="zh_CN">
<meta property="og:image" content="https://img.econow.cn/medivh/1669884658926.png">
<meta property="og:image" content="https://img.econow.cn/medivh/1669886114176.png">
<meta property="article:published_time" content="2022-12-01T08:30:34.000Z">
<meta property="article:modified_time" content="2023-10-31T02:15:08.681Z">
<meta property="article:author" content="medivh">
<meta property="article:tag" content="Kubernetes">
<meta name="twitter:card" content="summary">
<meta name="twitter:image" content="https://img.econow.cn/medivh/1669884658926.png">


<link rel="canonical" href="https://econow.cn/Kubernetes%E5%85%B3%E4%BA%8EStorageClass%E7%9A%84%E5%BA%94%E7%94%A8%E2%80%94%E2%80%94Flare">



<script class="next-config" data-name="page" type="application/json">{"sidebar":"","isHome":false,"isPost":true,"lang":"zh-CN","comments":true,"permalink":"https://econow.cn/Kubernetes%E5%85%B3%E4%BA%8EStorageClass%E7%9A%84%E5%BA%94%E7%94%A8%E2%80%94%E2%80%94Flare","path":"/Kubernetes关于StorageClass的应用——Flare","title":"Kubernetes关于StorageClass的应用——Flare"}</script>

<script class="next-config" data-name="calendar" type="application/json">""</script>
<title>Kubernetes关于StorageClass的应用——Flare | Medivh's castle</title>
  

  <script src="/js/third-party/analytics/baidu-analytics.js"></script>
  <script async src="https://hm.baidu.com/hm.js?21ded952ca9fc25e2b0630494a17ec7f"></script>







  <noscript>
    <link rel="stylesheet" href="/css/noscript.css">
  </noscript>
</head>

<body itemscope itemtype="http://schema.org/WebPage">
  <div class="headband"></div>

  <main class="main">
    <div class="column">
      <header class="header" itemscope itemtype="http://schema.org/WPHeader"><div class="site-brand-container">
  <div class="site-nav-toggle">
    <div class="toggle" aria-label="切换导航栏" role="button">
        <span class="toggle-line"></span>
        <span class="toggle-line"></span>
        <span class="toggle-line"></span>
    </div>
  </div>

  <div class="site-meta">

    <a href="/" class="brand" rel="start">
      <i class="logo-line"></i>
      <p class="site-title">Medivh's castle</p>
      <i class="logo-line"></i>
    </a>
      <p class="site-subtitle" itemprop="description">数据蜘蛛工作室</p>
  </div>

  <div class="site-nav-right">
    <div class="toggle popup-trigger" aria-label="搜索" role="button">
        <i class="fa fa-search fa-fw fa-lg"></i>
    </div>
  </div>
</div>



<nav class="site-nav">
  <ul class="main-menu menu"><li class="menu-item menu-item-home"><a href="/" rel="section"><i class="fa fa-home fa-fw"></i>首页</a></li><li class="menu-item menu-item-about"><a href="/about/" rel="section"><i class="fa fa-user fa-fw"></i>关于</a></li><li class="menu-item menu-item-tags"><a href="/tags/" rel="section"><i class="fa fa-tags fa-fw"></i>标签</a></li><li class="menu-item menu-item-categories"><a href="/categories/" rel="section"><i class="fa fa-th fa-fw"></i>分类</a></li><li class="menu-item menu-item-archives"><a href="/archives/" rel="section"><i class="fa fa-archive fa-fw"></i>归档</a></li>
      <li class="menu-item menu-item-search">
        <a role="button" class="popup-trigger"><i class="fa fa-search fa-fw"></i>搜索
        </a>
      </li>
  </ul>
</nav>



  <div class="search-pop-overlay">
    <div class="popup search-popup"><div class="search-header">
  <span class="search-icon">
    <i class="fa fa-search"></i>
  </span>
  <div class="search-input-container">
    <input autocomplete="off" autocapitalize="off" maxlength="80"
           placeholder="搜索..." spellcheck="false"
           type="search" class="search-input">
  </div>
  <span class="popup-btn-close" role="button">
    <i class="fa fa-times-circle"></i>
  </span>
</div>
<div class="search-result-container no-result">
  <div class="search-result-icon">
    <i class="fa fa-spinner fa-pulse fa-5x"></i>
  </div>
</div>

    </div>
  </div>

</header>
        
  
  <aside class="sidebar">

    <div class="sidebar-inner sidebar-nav-active sidebar-toc-active">
      <ul class="sidebar-nav">
        <li class="sidebar-nav-toc">
          文章目录
        </li>
        <li class="sidebar-nav-overview">
          站点概览
        </li>
      </ul>

      <div class="sidebar-panel-container">
        <!--noindex-->
        <div class="post-toc-wrap sidebar-panel">
            <div class="post-toc animated"><ol class="nav"><li class="nav-item nav-level-2"><a class="nav-link" href="#%E5%89%8D%E8%A8%80"><span class="nav-number">1.</span> <span class="nav-text">前言</span></a></li><li class="nav-item nav-level-2"><a class="nav-link" href="#%E6%8A%80%E6%9C%AF%E7%82%B9"><span class="nav-number">2.</span> <span class="nav-text">技术点</span></a><ol class="nav-child"><li class="nav-item nav-level-3"><a class="nav-link" href="#Storage-Class"><span class="nav-number">2.1.</span> <span class="nav-text">Storage Class</span></a><ol class="nav-child"><li class="nav-item nav-level-4"><a class="nav-link" href="#%E4%BB%80%E4%B9%88%E6%98%AFStorage-Class"><span class="nav-number">2.1.1.</span> <span class="nav-text">什么是Storage Class</span></a></li><li class="nav-item nav-level-4"><a class="nav-link" href="#%E4%B8%BA%E4%BB%80%E4%B9%88%E7%94%A8Storage-Class"><span class="nav-number">2.1.2.</span> <span class="nav-text">为什么用Storage Class</span></a></li><li class="nav-item nav-level-4"><a class="nav-link" href="#Storage-Class%E8%B5%84%E6%BA%90"><span class="nav-number">2.1.3.</span> <span class="nav-text">Storage Class资源</span></a></li></ol></li><li class="nav-item nav-level-3"><a class="nav-link" href="#flare"><span class="nav-number">2.2.</span> <span class="nav-text">flare</span></a></li></ol></li><li class="nav-item nav-level-2"><a class="nav-link" href="#%E9%83%A8%E7%BD%B2"><span class="nav-number">3.</span> <span class="nav-text">部署</span></a><ol class="nav-child"><li class="nav-item nav-level-3"><a class="nav-link" href="#%E5%88%9B%E5%BB%BAStorage-class"><span class="nav-number">3.1.</span> <span class="nav-text">创建Storage class</span></a></li><li class="nav-item nav-level-3"><a class="nav-link" href="#%E9%83%A8%E7%BD%B2flare"><span class="nav-number">3.2.</span> <span class="nav-text">部署flare</span></a></li></ol></li><li class="nav-item nav-level-2"><a class="nav-link" href="#%E6%80%BB%E7%BB%93"><span class="nav-number">4.</span> <span class="nav-text">总结</span></a></li><li class="nav-item nav-level-2"><a class="nav-link" href="#%E5%8F%82%E8%80%83"><span class="nav-number">5.</span> <span class="nav-text">参考</span></a></li></ol></div>
        </div>
        <!--/noindex-->

        <div class="site-overview-wrap sidebar-panel">
          <div class="site-author animated" itemprop="author" itemscope itemtype="http://schema.org/Person">
  <p class="site-author-name" itemprop="name">medivh</p>
  <div class="site-description" itemprop="description"></div>
</div>
<div class="site-state-wrap animated">
  <nav class="site-state">
      <div class="site-state-item site-state-posts">
        <a href="/archives/">
          <span class="site-state-item-count">95</span>
          <span class="site-state-item-name">日志</span>
        </a>
      </div>
      <div class="site-state-item site-state-categories">
          <a href="/categories/">
        <span class="site-state-item-count">12</span>
        <span class="site-state-item-name">分类</span></a>
      </div>
      <div class="site-state-item site-state-tags">
          <a href="/tags/">
        <span class="site-state-item-count">48</span>
        <span class="site-state-item-name">标签</span></a>
      </div>
  </nav>
</div>

        </div>
      </div>
    </div>

    
  </aside>


    </div>

    <div class="main-inner post posts-expand">


  


<div class="post-block">
  
  

  <article itemscope itemtype="http://schema.org/Article" class="post-content" lang="zh-CN">
    <link itemprop="mainEntityOfPage" href="https://econow.cn/Kubernetes%E5%85%B3%E4%BA%8EStorageClass%E7%9A%84%E5%BA%94%E7%94%A8%E2%80%94%E2%80%94Flare">

    <span hidden itemprop="author" itemscope itemtype="http://schema.org/Person">
      <meta itemprop="image" content="/images/avatar.gif">
      <meta itemprop="name" content="medivh">
    </span>

    <span hidden itemprop="publisher" itemscope itemtype="http://schema.org/Organization">
      <meta itemprop="name" content="Medivh's castle">
      <meta itemprop="description" content="">
    </span>

    <span hidden itemprop="post" itemscope itemtype="http://schema.org/CreativeWork">
      <meta itemprop="name" content="Kubernetes关于StorageClass的应用——Flare | Medivh's castle">
      <meta itemprop="description" content="">
    </span>
      <header class="post-header">
        <h1 class="post-title" itemprop="name headline">
          Kubernetes关于StorageClass的应用——Flare
        </h1>

        <div class="post-meta-container">
          <div class="post-meta">
    <span class="post-meta-item">
      <span class="post-meta-item-icon">
        <i class="far fa-calendar"></i>
      </span>
      <span class="post-meta-item-text">发表于</span>

      <time title="创建时间：2022-12-01 16:30:34" itemprop="dateCreated datePublished" datetime="2022-12-01T16:30:34+08:00">2022-12-01</time>
    </span>
    <span class="post-meta-item">
      <span class="post-meta-item-icon">
        <i class="far fa-calendar-check"></i>
      </span>
      <span class="post-meta-item-text">更新于</span>
      <time title="修改时间：2023-10-31 10:15:08" itemprop="dateModified" datetime="2023-10-31T10:15:08+08:00">2023-10-31</time>
    </span>
    <span class="post-meta-item">
      <span class="post-meta-item-icon">
        <i class="far fa-folder"></i>
      </span>
      <span class="post-meta-item-text">分类于</span>
        <span itemprop="about" itemscope itemtype="http://schema.org/Thing">
          <a href="/categories/%E4%BA%91%E5%8E%9F%E7%94%9F/" itemprop="url" rel="index"><span itemprop="name">云原生</span></a>
        </span>
    </span>

  
    <span id="/Kubernetes%E5%85%B3%E4%BA%8EStorageClass%E7%9A%84%E5%BA%94%E7%94%A8%E2%80%94%E2%80%94Flare" class="post-meta-item leancloud_visitors" data-flag-title="Kubernetes关于StorageClass的应用——Flare" title="阅读次数">
      <span class="post-meta-item-icon">
        <i class="far fa-eye"></i>
      </span>
      <span class="post-meta-item-text">阅读次数：</span>
      <span class="leancloud-visitors-count"></span>
    </span>
</div>

        </div>
      </header>

    
    
    
    <div class="post-body" itemprop="articleBody"><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>最近在折腾NAS和虚拟机的时候发现一个问题，部署的应用和服务太多了，有点记不住地址和端口了，所以需要一个导航页来展示这一切。</p>
<p>本想自己开发一个单页面应用呢，但是想到vue或react，对于前端的东西能不碰就不想碰，所以找到了一个开源的项目——flare。恰巧搭建了一个Kubernetes集群，正好练习一下。</p>
<h2 id="技术点"><a href="#技术点" class="headerlink" title="技术点"></a>技术点</h2><h3 id="Storage-Class"><a href="#Storage-Class" class="headerlink" title="Storage Class"></a>Storage Class</h3><h4 id="什么是Storage-Class"><a href="#什么是Storage-Class" class="headerlink" title="什么是Storage Class"></a>什么是Storage Class</h4><p>Kubernetes提供了一套可以自动创建PV的机制，即：Dynamic Provisioning。而这个机制的核心在于StorageClass这个API对象。</p>
<p>StorageClass对象会定义下面两部分内容:</p>
<ol>
<li>PV的属性。比如，存储类型，Volume的大小等。</li>
<li>创建这种PV需要用到的存储插件，即存储制备器。</li>
</ol>
<p>有了这两个信息之后，Kubernetes就能够根据用户提交的PVC，找到一个对应的StorageClass，之后Kubernetes就会调用该StorageClass声明的存储插件，进而创建出需要的PV。</p>
<h4 id="为什么用Storage-Class"><a href="#为什么用Storage-Class" class="headerlink" title="为什么用Storage Class"></a>为什么用Storage Class</h4><p>在一个大规模的Kubernetes集群里，可能有成千上万个PVC，这就意味着运维人员必须实现创建出这个多个PV，此外，随着项目的需要，会有新的PVC不断被提交，那么运维人员就需要不断的添加新的，满足要求的PV，否则新的Pod就会因为PVC绑定不到PV而导致创建失败。而且通过 PVC 请求到一定的存储空间也很有可能不足以满足应用对于存储设备的各种需求。</p>
<p>而且不同的应用程序对于存储性能的要求可能也不尽相同，比如读写速度、并发性能等，为了解决这一问题，Kubernetes 又为我们引入了一个新的资源对象：StorageClass，通过 StorageClass 的定义，管理员可以将存储资源定义为某种类型的资源，比如快速存储、慢速存储等，用户根据 StorageClass 的描述就可以非常直观的知道各种存储资源的具体特性了，这样就可以根据应用的特性去申请合适的存储资源了。</p>
<p>pvc是无法直接去向nfs-client-provisioner申请使用的存储空间的，这时，就需要通过SC这个资源对象去申请了，SC的根本作用就是根据pvc定义的来动态创建pv，不仅节省了我们管理员的时间，还可以封装不同类型的存储供pvc选用。</p>
<h4 id="Storage-Class资源"><a href="#Storage-Class资源" class="headerlink" title="Storage Class资源"></a>Storage Class资源</h4><p>每个sc都包含以下三个重要的字段，这些字段会在sc需要动态分配pv时会使用到：</p>
<ul>
<li>Provisioner（供给方）：提供了存储资源的存储系统。</li>
<li>ReclaimPolicy：pv的回收策略，可用的值有Delete（默认）和Retiain</li>
<li>Parameters（参数）：存储类使用参数描述要关联到存储卷。</li>
</ul>
<p>每个 StorageClass 都有一个制备器（Provisioner），用来决定使用哪个卷插件制备 PV。 该字段必须指定。</p>
<table>
<thead>
<tr>
<th>插件</th>
<th>内置制备器</th>
<th>配置例子</th>
</tr>
</thead>
<tbody><tr>
<td>AWSElasticBlockStore</td>
<td>✓</td>
<td>AWS EBS</td>
</tr>
<tr>
<td>AzureFile</td>
<td>✓</td>
<td>Azure File</td>
</tr>
<tr>
<td>AzureDisk</td>
<td>✓</td>
<td>Azure Disk</td>
</tr>
<tr>
<td>CephFS</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td>Cinder</td>
<td>✓</td>
<td>OpenStack Cinder</td>
</tr>
<tr>
<td>FC</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td>FlexVolume</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td>Flocker</td>
<td>✓</td>
<td>-</td>
</tr>
<tr>
<td>GCEPersistentDisk</td>
<td>✓</td>
<td>GCE PD</td>
</tr>
<tr>
<td>Glusterfs</td>
<td>✓</td>
<td>Glusterfs</td>
</tr>
<tr>
<td>iSCSI</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td>Quobyte</td>
<td>✓</td>
<td>Quobyte</td>
</tr>
<tr>
<td>NFS</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td>RBD</td>
<td>✓</td>
<td>Ceph RBD</td>
</tr>
<tr>
<td>VsphereVolume</td>
<td>✓</td>
<td>vSphere</td>
</tr>
<tr>
<td>PortworxVolume</td>
<td>✓</td>
<td>Portworx Volume</td>
</tr>
<tr>
<td>ScaleIO</td>
<td>✓</td>
<td>ScaleIO</td>
</tr>
<tr>
<td>StorageOS</td>
<td>✓</td>
<td>StorageOS</td>
</tr>
<tr>
<td>Local</td>
<td>-</td>
<td>Local</td>
</tr>
</tbody></table>
<p>回收策略，由 StorageClass 动态创建的 PersistentVolume 会在类的 reclaimPolicy 字段中指定回收策略，可以是 Delete 或者 Retain。如果 StorageClass 对象被创建时没有指定 reclaimPolicy，它将默认为 Delete。</p>
<h3 id="flare"><a href="#flare" class="headerlink" title="flare"></a>flare</h3><p>轻量、快速、美观的个人导航页面，适用于 HomeLab 或其他注重私密的场景。<br>支持 x86 以及常见的 ARM (ARM32v6、ARM32v7、ARM64v8)设备，应用资源消耗非常低：</p>
<ul>
<li>CPU: &lt; 1%</li>
<li>MEM: &lt; 30M</li>
<li>Docker Image: &lt; 10M</li>
</ul>
<p>使用方式很简单：</p>
<ol>
<li>下载Git仓库</li>
<li>使用docker启动，注意挂载<code>/app</code>目录</li>
</ol>
<h2 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h2><h3 id="创建Storage-class"><a href="#创建Storage-class" class="headerlink" title="创建Storage class"></a>创建Storage class</h3><p>要使用 StorageClass，我们就得安装对应的自动配置程序，比如我们这里存储后端使用的是 nfs，那么我们就需要使用到一个 nfs-client 的自动配置程序，我们也叫它 Provisioner（制备器），这个程序使用我们已经配置好的 nfs 服务器，来自动创建持久卷，也就是自动帮我们创建 PV。</p>
<ol>
<li>自动创建的 PV 以${namespace}-${pvcName}-${pvName}这样的命名格式创建在 NFS 服务器上的共享数据目录中</li>
<li>而当这个 PV 被回收后会以archieved-${namespace}-${pvcName}-${pvName}这样的命名格式存在 NFS 服务器上。</li>
</ol>
<p><img data-src="https://img.econow.cn/medivh/1669884658926.png" alt="1669884658926.png"></p>
<p>注意在所有节点安装<code>yum -y install nfs-utils</code>.</p>
<p>创建rbac权限：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: v1</span><br><span class="line">kind: ServiceAccount</span><br><span class="line">metadata:</span><br><span class="line">  name: nfs-provisioner</span><br><span class="line">  namespace: default</span><br><span class="line">---</span><br><span class="line">apiVersion: rbac.authorization.k8s.io/v1</span><br><span class="line">kind: ClusterRole</span><br><span class="line">metadata:</span><br><span class="line">  name: nfs-provisioner-runner</span><br><span class="line">  namespace: default</span><br><span class="line">rules:</span><br><span class="line">   -  apiGroups: [<span class="string">&quot;&quot;</span>]</span><br><span class="line">      resources: [<span class="string">&quot;persistentvolumes&quot;</span>]</span><br><span class="line">      verbs: [<span class="string">&quot;get&quot;</span>, <span class="string">&quot;list&quot;</span>, <span class="string">&quot;watch&quot;</span>, <span class="string">&quot;create&quot;</span>, <span class="string">&quot;delete&quot;</span>]</span><br><span class="line">   -  apiGroups: [<span class="string">&quot;&quot;</span>]</span><br><span class="line">      resources: [<span class="string">&quot;persistentvolumeclaims&quot;</span>]</span><br><span class="line">      verbs: [<span class="string">&quot;get&quot;</span>, <span class="string">&quot;list&quot;</span>, <span class="string">&quot;watch&quot;</span>, <span class="string">&quot;update&quot;</span>]</span><br><span class="line">   -  apiGroups: [<span class="string">&quot;storage.k8s.io&quot;</span>]</span><br><span class="line">      resources: [<span class="string">&quot;storageclasses&quot;</span>]</span><br><span class="line">      verbs: [<span class="string">&quot;get&quot;</span>, <span class="string">&quot;list&quot;</span>, <span class="string">&quot;watch&quot;</span>]</span><br><span class="line">   -  apiGroups: [<span class="string">&quot;&quot;</span>]</span><br><span class="line">      resources: [<span class="string">&quot;events&quot;</span>]</span><br><span class="line">      verbs: [<span class="string">&quot;watch&quot;</span>, <span class="string">&quot;create&quot;</span>, <span class="string">&quot;update&quot;</span>, <span class="string">&quot;patch&quot;</span>]</span><br><span class="line">   -  apiGroups: [<span class="string">&quot;&quot;</span>]</span><br><span class="line">      resources: [<span class="string">&quot;services&quot;</span>, <span class="string">&quot;endpoints&quot;</span>]</span><br><span class="line">      verbs: [<span class="string">&quot;get&quot;</span>,<span class="string">&quot;create&quot;</span>,<span class="string">&quot;list&quot;</span>, <span class="string">&quot;watch&quot;</span>,<span class="string">&quot;update&quot;</span>]</span><br><span class="line">   -  apiGroups: [<span class="string">&quot;extensions&quot;</span>]</span><br><span class="line">      resources: [<span class="string">&quot;podsecuritypolicies&quot;</span>]</span><br><span class="line">      resourceNames: [<span class="string">&quot;nfs-provisioner&quot;</span>]</span><br><span class="line">      verbs: [<span class="string">&quot;use&quot;</span>]</span><br><span class="line">---</span><br><span class="line">kind: ClusterRoleBinding</span><br><span class="line">apiVersion: rbac.authorization.k8s.io/v1</span><br><span class="line">metadata:</span><br><span class="line">  name: run-nfs-provisioner</span><br><span class="line">subjects:</span><br><span class="line">  - kind: ServiceAccount</span><br><span class="line">    name: nfs-provisioner</span><br><span class="line">    namespace: default</span><br><span class="line">roleRef:</span><br><span class="line">  kind: ClusterRole</span><br><span class="line">  name: nfs-provisioner-runner</span><br><span class="line">  apiGroup: rbac.authorization.k8s.io</span><br></pre></td></tr></table></figure>

<p>执行yaml文件。我们新建的一个名为nfs-provisioner的ServiceAccount，然后绑定了一个名为nfs-provisioner-runner的ClusterRole，而该ClusterRole声明了一些权限，其中就包括对pv的增，删，改，查等权限，所以我们可以利用该serviceAccount来自动创建pv。</p>
<p>创建NFS的deployment：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: apps/v1</span><br><span class="line">kind: Deployment</span><br><span class="line">metadata:</span><br><span class="line">  name: nfs-client-provisioner</span><br><span class="line">  namespace: default</span><br><span class="line">spec:</span><br><span class="line">  replicas: 1</span><br><span class="line">  strategy:</span><br><span class="line">    <span class="built_in">type</span>: Recreate</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      app: nfs-client-provisioner</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels:</span><br><span class="line">        app: nfs-client-provisioner</span><br><span class="line">    spec:</span><br><span class="line">      serviceAccount: nfs-provisioner</span><br><span class="line">      containers:</span><br><span class="line">        - name: nfs-client-provisioner</span><br><span class="line">          image: registry.cn-hangzhou.aliyuncs.com/open-ali/nfs-client-provisioner</span><br><span class="line">          volumeMounts:</span><br><span class="line">            - name: nfs-client-root</span><br><span class="line">              mountPath:  /persistentvolumes</span><br><span class="line">          <span class="built_in">env</span>:</span><br><span class="line">            - name: PROVISIONER_NAME</span><br><span class="line">              value: nfs-deploy    <span class="comment">#供给方的名称（自定义）</span></span><br><span class="line">            - name: NFS_SERVER</span><br><span class="line">              value: 192.168.31.98     <span class="comment">#nfs服务器的ip地址</span></span><br><span class="line">            - name: NFS_PATH</span><br><span class="line">              value: /mnt/free/nfs      <span class="comment">#nfs共享的目录</span></span><br><span class="line">      volumes:</span><br><span class="line">        - name: nfs-client-root</span><br><span class="line">          nfs:</span><br><span class="line">            server: 192.168.31.98</span><br><span class="line">            path: /mnt/free/nfs</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>执行yaml文件，检查pod</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@master-51 ~]<span class="comment"># kubectl get pods</span></span><br><span class="line">NAME                                      READY   STATUS    RESTARTS   AGE</span><br><span class="line">nfs-client-provisioner-7d9b557c55-9vs77   1/1     Running   0          16m</span><br></pre></td></tr></table></figure>

<p>创建storage class:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: storage.k8s.io/v1</span><br><span class="line">kind: StorageClass</span><br><span class="line">metadata:</span><br><span class="line">  name: stateful-nfs</span><br><span class="line">  namespace: default</span><br><span class="line">provisioner: nfs-deploy</span><br><span class="line">reclaimPolicy: Retain</span><br></pre></td></tr></table></figure>

<p>我们声明了一个名为statefu-nfs的sc对象，注意下面的provisioner字段对应的值一定要和上面的nfs的Deployment下面的PROVISIONER_NAME这个环境变量的值一样。</p>
<p>执行yaml文件，检查该资源对象。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@master-51 ~]<span class="comment"># kubectl get storageclass</span></span><br><span class="line">NAME           PROVISIONER   RECLAIMPOLICY   VOLUMEBINDINGMODE   ALLOWVOLUMEEXPANSION   AGE</span><br><span class="line">stateful-nfs   nfs-deploy    Retain          Immediate           <span class="literal">false</span>                  1m</span><br></pre></td></tr></table></figure>

<p>动态创建PVC</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">kind: PersistentVolumeClaim</span><br><span class="line">apiVersion: v1</span><br><span class="line">metadata:</span><br><span class="line">  name: flare</span><br><span class="line">spec:</span><br><span class="line">  accessModes:</span><br><span class="line">    - ReadWriteMany</span><br><span class="line">  storageClassName: stateful-nfs</span><br><span class="line">  resources:</span><br><span class="line">    requests:</span><br><span class="line">      storage: 100Mi</span><br></pre></td></tr></table></figure>

<p>执行yaml文件，检查是否创建了对应的PVC。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@master-51 flare]<span class="comment"># kubectl get pvc</span></span><br><span class="line">NAME    STATUS   VOLUME                                     CAPACITY   ACCESS MODES   STORAGECLASS   AGE</span><br><span class="line">flare   Bound    pvc-ed851458-fe37-4095-a6e5-4838e46a58d0   100Mi      RWX            stateful-nfs   1m</span><br></pre></td></tr></table></figure>

<h3 id="部署flare"><a href="#部署flare" class="headerlink" title="部署flare"></a>部署flare</h3><p>编辑yaml文件：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: apps/v1</span><br><span class="line">kind: Deployment</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    app: flare</span><br><span class="line">  name: flare</span><br><span class="line">spec:</span><br><span class="line">  replicas: 1</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      app: flare</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels:</span><br><span class="line">        app: flare</span><br><span class="line">    spec:</span><br><span class="line">      containers:</span><br><span class="line">      - image: soulteary/flare</span><br><span class="line">        name: flare</span><br><span class="line">        volumeMounts:</span><br><span class="line">        - name: flare-app</span><br><span class="line">          mountPath: /app</span><br><span class="line">      volumes:</span><br><span class="line">      - name: flare-app</span><br><span class="line">        persistentVolumeClaim:</span><br><span class="line">          claimName: flare</span><br></pre></td></tr></table></figure>

<p>执行yaml文件，检查pod文件nfs。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[root@master-51 ~]<span class="comment"># kubectl get pods</span></span><br><span class="line">NAME                                      READY   STATUS    RESTARTS   AGE</span><br><span class="line">flare-5c57955b54-rj6hr                    1/1     Running   0          2m</span><br><span class="line">nfs-client-provisioner-7d9b557c55-9vs77   1/1     Running   0          7m</span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查nfs目录</span></span><br><span class="line"></span><br><span class="line">root@truenas[...-ed851458-fe37-4095-a6e5-4838e46a58d0]<span class="comment"># ll</span></span><br><span class="line">total 39</span><br><span class="line">drwxrwxrwx 2 nobody   5 Dec  1 14:55 ./</span><br><span class="line">drwxrwxrwx 3 nfs      6 Dec  1 14:42 ../</span><br><span class="line">-rwxr-xr-x 1 nobody 418 Dec  1 15:51 apps.yml*</span><br><span class="line">-rwxr-xr-x 1 nobody 733 Dec  1 15:51 bookmarks.yml*</span><br><span class="line">-rwxr-xr-x 1 nobody 467 Dec  1 14:58 config.yml*</span><br><span class="line">root@truenas[...-ed851458-fe37-4095-a6e5-4838e46a58d0]<span class="comment"># pwd</span></span><br><span class="line">/mnt/free/nfs/default-flare-pvc-ed851458-fe37-4095-a6e5-4838e46a58d0</span><br></pre></td></tr></table></figure>

<p>临时使用nodeport的方式访问：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: v1</span><br><span class="line">kind: Service</span><br><span class="line">metadata:</span><br><span class="line">  name: flare</span><br><span class="line">spec:</span><br><span class="line">  <span class="built_in">type</span>: NodePort</span><br><span class="line">  ports:</span><br><span class="line">  - port: 35005</span><br><span class="line">    targetPort: 5005</span><br><span class="line">    nodePort: 35005</span><br><span class="line">  selector:</span><br><span class="line">    app: flare</span><br></pre></td></tr></table></figure>

<p>之后可以考虑使用ingress或者其他方式。</p>
<p>访问页面，很美好：</p>
<p><img data-src="https://img.econow.cn/medivh/1669886114176.png" alt="1669886114176.png"></p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>遇到的问题：</p>
<p>**问题 1.**：unexpected error getting claim reference: selfLink was empty, can’t make reference<br><strong>解决</strong> Kubernetes 1.20及以后版本禁用了 selfLink 所致。修改 &#x2F;etc&#x2F;kubernetes&#x2F;manifests&#x2F;kube-apiserver.yaml，添加 - –feature-gates&#x3D;RemoveSelfLink&#x3D;false 后重新部署。</p>
<p>**问题 2.**：waiting for a volume to be created, either by external provisioner “fuseim.pri&#x2F;ifs” or manually created by system administrator<br><strong>解决</strong> Kubernetes 1.20及以后版本禁用了 selfLink 所致。修改 &#x2F;etc&#x2F;kubernetes&#x2F;manifests&#x2F;kube-apiserver.yaml，添加 - –feature-gates&#x3D;RemoveSelfLink&#x3D;false 后重新部署。</p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul>
<li><a target="_blank" rel="noopener" href="https://github.com/soulteary/docker-flare">https://github.com/soulteary/docker-flare</a></li>
<li><a target="_blank" rel="noopener" href="https://hub.docker.com/r/soulteary/flare">https://hub.docker.com/r/soulteary/flare</a></li>
<li><a target="_blank" rel="noopener" href="https://blog.csdn.net/u012069313/article/details/125264651">Kubernetes常见报错</a></li>
</ul>

    </div>

    
    
    

    <footer class="post-footer">
          <div class="reward-container">
  <div>喜欢就点个赞吧！</div>
  <button>
    赞赏
  </button>
  <div class="post-reward">
      <div>
        <img src="/images/wechatpay.jpg" alt="medivh 微信">
        <span>微信</span>
      </div>
      <div>
        <img src="/images/alipay.jpg" alt="medivh 支付宝">
        <span>支付宝</span>
      </div>

  </div>
</div>

          

<div class="post-copyright">
<ul>
  <li class="post-copyright-author">
      <strong>本文作者： </strong>medivh
  </li>
  <li class="post-copyright-link">
      <strong>本文链接：</strong>
      <a href="https://econow.cn/Kubernetes%E5%85%B3%E4%BA%8EStorageClass%E7%9A%84%E5%BA%94%E7%94%A8%E2%80%94%E2%80%94Flare" title="Kubernetes关于StorageClass的应用——Flare">https://econow.cn/Kubernetes关于StorageClass的应用——Flare</a>
  </li>
  <li class="post-copyright-license">
      <strong>版权声明： </strong>本博客所有文章除特别声明外，均采用 <a href="https://creativecommons.org/licenses/by-nc-sa/4.0/" rel="noopener" target="_blank"><i class="fab fa-fw fa-creative-commons"></i>BY-NC-SA</a> 许可协议。转载请注明出处！
  </li>
</ul>
</div>

          <div class="post-tags">
              <a href="/tags/Kubernetes/" rel="tag"><i class="fa fa-tag"></i> Kubernetes</a>
          </div>

        

          <div class="post-nav">
            <div class="post-nav-item">
                <a href="/%E5%9F%BA%E4%BA%8EPVE%E5%B9%B3%E5%8F%B0%E7%9A%84TrueNAS_Scale+NextCloud%E7%9A%84%E5%AE%9E%E8%B7%B5%E6%80%BB%E7%BB%93%EF%BC%88%E4%B8%89%EF%BC%89" rel="prev" title="基于PVE平台的TrueNAS_Scale+NextCloud的实践总结（三）">
                  <i class="fa fa-angle-left"></i> 基于PVE平台的TrueNAS_Scale+NextCloud的实践总结（三）
                </a>
            </div>
            <div class="post-nav-item">
                <a href="/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%E5%B7%A5%E5%85%B7%E2%80%94%E2%80%94frp%E7%9A%84%E5%AE%9E%E8%B7%B5" rel="next" title="内网穿透工具——frp的实践">
                  内网穿透工具——frp的实践 <i class="fa fa-angle-right"></i>
                </a>
            </div>
          </div>
    </footer>
  </article>
</div>






</div>
  </main>

  <footer class="footer">
    <div class="footer-inner">

  <div class="beian"><a href="https://beian.miit.gov.cn/" rel="noopener" target="_blank">京ICP备17063827号-2 </a>
  </div>
  <div class="copyright">
    &copy; 2017 – 
    <span itemprop="copyrightYear">2023</span>
    <span class="with-love">
      <i class="fa fa-heart"></i>
    </span>
    <span class="author" itemprop="copyrightHolder">medivh</span>
  </div>

    </div>
  </footer>

  
  <div class="back-to-top" role="button" aria-label="返回顶部">
    <i class="fa fa-arrow-up fa-lg"></i>
    <span>0%</span>
  </div>
  <div class="reading-progress-bar"></div>

<noscript>
  <div class="noscript-warning">Theme NexT works best with JavaScript enabled</div>
</noscript>


  
  <script src="https://cdnjs.cloudflare.com/ajax/libs/animejs/3.2.1/anime.min.js" integrity="sha256-XL2inqUJaslATFnHdJOi9GfQ60on8Wx1C2H8DYiN1xY=" crossorigin="anonymous"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/lozad.js/1.16.0/lozad.min.js" integrity="sha256-mOFREFhqmHeQbXpK2lp4nA3qooVgACfh88fpJftLBbc=" crossorigin="anonymous"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/pangu/4.0.7/pangu.min.js" integrity="sha256-j+yj56cdEY2CwkVtGyz18fNybFGpMGJ8JxG3GSyO2+I=" crossorigin="anonymous"></script>
<script src="/js/comments.js"></script><script src="/js/utils.js"></script><script src="/js/next-boot.js"></script>

  <script src="https://cdnjs.cloudflare.com/ajax/libs/hexo-generator-searchdb/1.4.1/search.js" integrity="sha256-1kfA5uHPf65M5cphT2dvymhkuyHPQp5A53EGZOnOLmc=" crossorigin="anonymous"></script>
<script src="/js/third-party/search/local-search.js"></script>







  


  <script class="next-config" data-name="leancloud_visitors" type="application/json">{"enable":true,"app_id":"g1GwilqmVAUne2tDEDncEChG-gzGzoHsz","app_key":"YB2e5dSKMmMYYCtaSzxp9fdS","server_url":null,"security":true}</script>
  <script src="/js/third-party/statistics/lean-analytics.js"></script>



</body>
</html>
